#
# Copyright (c) 2017- Shohei Tanaka(@xcir)
#
# File layout and configuration based on libvmod-example
# Copyright (c) 2011 Varnish Software AS
# request-body access based on libvmod-bodyaccess( https://github.com/aondio/libvmod-bodyaccess )
#

$Module parseform 3 Parseform VMOD

DESCRIPTION
===========

Get POST value


$Event event_function

Returns a string set by the last VCL event, demonstrating the use of
event functions.

$Function STRING get(PRIV_TASK, STRING key, STRING glue=", ")

Prototype
        ::

                get(STRING key, STRING glue=", ")
Return value
	STRING
Description
	Get POST value.
	If POST have multiple-key, join with glue.
	Only used in vcl_recv.
	Need to call std.cache_req_body before using this.
	Support content-type is "application/x-www-form-urlencoded" and "multipart/form-data" and "text/plain".
Attention
	This function does not care for binary.
Example
        ::

                import std;
                import parseform;
                sub vcl_recv{
                    
                    std.cache_req_body(1MB);
                    if(parseform.get("postkey")){
                        ...
                    }
                }


$Function INT len(PRIV_TASK, STRING key, STRING glue=", ")

Prototype
        ::

                len(STRING key, STRING glue=", ")
Return value
	INT
Description
	Get POST length.
	If POST have multiple-key, join with glue.
	Only used in vcl_recv.
	Need to call std.cache_req_body before using this.
	Support content-type is "application/x-www-form-urlencoded" and "multipart/form-data" and "text/plain".
Example
        ::

                import std;
                import parseform;
                sub vcl_recv{
                    
                    std.cache_req_body(1MB);
                    if(parseform.len("postkey") > 0){
                        ...
                    }
                }

