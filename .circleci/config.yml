---
auth: &auth
  auth:
    username: $ARTIFACTORY_USERNAME
    password: $ARTIFACTORY_PASSWORD

dockerauth: &dockerauth
   auth:
     username: $DOCKER_USERNAME
     password: $DOCKER_PASSWORD

references:
  workspace_root: &workspace_root
                    ~/libvmod-parseform
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  write-version:
    docker:
      - image: "ubuntu:bionic"
        <<: *dockerauth
    working_directory: ~/libvmod-parseform
    steps:
      - checkout
      - run: apt-get update
      - run: apt-get install -y git
      - run: git describe --tags --always | cut -c 2- | sed 's/\(.*\)-/\1\./' > version.txt
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - version.txt

  build-parseform:
    docker:
      - image: "ubuntu:bionic"
        <<: *dockerauth
    working_directory: ~/libvmod-parseform
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: "Tools to add the package cloud certificate"
          command: |
            apt-get update
            apt-get install -y curl gnupg apt-transport-https
            apt-key add varnish_sources_pubkey.txt
      - run:
          name: "Package cloud sources"
          command: |
            cp packagecloud.sources /etc/apt/sources.list.d/varnishcache_varnish60lts.list
            apt-get update
      # Install varnish 6
      - run: apt-get install -y varnish varnish-dev
      # Build tools for parseform
      - run: apt-get install -y git dpkg-dev libtool m4 automake pkg-config docutils-common
      - run:
          name: "Clone and build parseform"
          command: |
            sh autogen.sh
            ./configure
            make
            make install
            cp /usr/lib/varnish/vmods/libvmod_parseform.* .
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./libvmod_parseform.la
            - ./libvmod_parseform.so

  varnish-parseform-deb:
    docker:
      - image: "tenzer/fpm:no-entrypoint"
        <<: *dockerauth
    working_directory: ~/libvmod-parseform
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: "Build varnish-parseform deb"
          command: |
            VERSION=`cat version.txt`
            fpm -s dir -t deb -n varnish-parseform -v $VERSION -p varnish-parseform_${VERSION}_all.deb ./=/usr/lib/varnish/vmods/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - varnish-parseform_*.deb

  varnish-parseform-publish:
    docker:
      - image: "smartthings-docker-build.jfrog.io/releng/build-common:latest"
        <<: *auth
    environment:
      DEBIAN_DISTRIBUTION: releng
      DEBIAN_COMPONENT: main
    working_directory: ~/libvmod-parseform
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: "Publish varnish-parseform deb to artifactory"
          command: |
            export DEBIAN_FILE_NAME=$(find . -name 'varnish-parseform*.deb' -print)
            export DEBIAN_PACKAGE_NAME=$(basename ${DEBIAN_FILE_NAME})
            export DEB_VERSION=$(echo $DEBIAN_PACKAGE_NAME | cut -d_ -f2)
            curl -f \
              -H 'Expect:' \
              -u "${ARTIFACTORY_USERNAME}:${ARTIFACTORY_PASSWORD}" \
              -XPUT "https://smartthings.jfrog.io/smartthings/deb/pool/main/${DEBIAN_PACKAGE_NAME:0:1}/${DEBIAN_PACKAGE_NAME};deb.distribution=${DEBIAN_DISTRIBUTION};deb.component=${DEBIAN_COMPONENT};deb.architecture=all;deb.maintainer=no-reply@smartthings.com;deb.name=varnish-parseform;deb.priority=optional;deb.section=java;deb.version=${DEB_VERSION}" \
              -T ${DEBIAN_FILE_NAME}

version: 2

jobconfig: &jobconfig
  filters:
    branches:
      only: /varnish61/
    tags:
      only: /.*/

workflows:
  version: 2
  ci:
    jobs:
      # Build
      - write-version:
          <<: *jobconfig
      - build-parseform:
          requires:
            - write-version
          <<: *jobconfig
      - varnish-parseform-deb:
          requires:
            - write-version
            - build-parseform
          <<: *jobconfig
      - varnish-parseform-publish:
          requires:
            - varnish-parseform-deb
          <<: *jobconfig

